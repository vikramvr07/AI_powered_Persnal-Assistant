from flask import Flask, request, jsonify
import openai
import requests
from flask_cors import CORS

app = Flask(_name_)
CORS(app)  # Enable Cross-Origin Resource Sharing

# Set your API keys here
OPENAI_API_KEY = "your_openai_api_key"
WEATHER_API_KEY = "your_openweather_api_key"
NEWS_API_KEY = "your_newsapi_key"

# OpenAI Chatbot API
@app.route('/chat', methods=['POST'])
def chat():
    user_input = request.json.get("message")
    
    if not user_input:
        return jsonify({"error": "Message is required"}), 400

    response = openai.ChatCompletion.create(
        model="gpt-4",
        messages=[{"role": "system", "content": "You are a helpful AI assistant."},
                  {"role": "user", "content": user_input}]
    )
    
    return jsonify({"response": response["choices"][0]["message"]["content"]})

# Fetch weather data
@app.route('/weather', methods=['GET'])
def get_weather():
    city = request.args.get("city", "New York")  # Default city
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric"
    
    response = requests.get(url)
    data = response.json()
    
    if data.get("cod") != 200:
        return jsonify({"error": "City not found"}), 404

    weather_info = {
        "city": city,
        "temperature": data["main"]["temp"],
        "description": data["weather"][0]["description"]
    }
    
    return jsonify(weather_info)

# Fetch latest news
@app.route('/news', methods=['GET'])
def get_news():
    url = f"https://newsapi.org/v2/top-headlines?country=us&apiKey={NEWS_API_KEY}"
    response = requests.get(url)
    data = response.json()
    
    if data.get("status") != "ok":
        return jsonify({"error": "Failed to fetch news"}), 500

    articles = [{"title": article["title"], "url": article["url"]} for article in data["articles"][:5]]
    
    return jsonify({"articles": articles})

if _name_ == '_main_':
    app.run(debug=True)
